# What is this file?
# This file contains options which allow you to configure your multiworld experience while allowing others
# to play how they want as well.

# How do I use it?
# The options in this file are weighted. This means the higher number you assign to a value, the more
# chances you have for that option to be chosen. For example, an option like this:
#
# map_shuffle:
#   on: 5
#   off: 15
#
# Means you have 5 chances for map shuffle to occur, and 15 chances for map shuffle to be turned off

# I've never seen a file like this before. What characters am I allowed to use?
# This is a .yaml file. You are allowed to use most characters.
# To test if your yaml is valid or not, you can use this website:
# http://www.yamllint.com/

description: Default Ocarina of Time Template # Used to describe your yaml. Useful if you have multiple files
# Your name in-game. Spaces will be replaced with underscores and there is a 16 character limit
name: YourName{number}
#{player} will be replaced with the player's slot number.
#{PLAYER} will be replaced with the player's slot number if that slot number is greater than 1.
#{number} will be replaced with the counter value of the name.
#{NUMBER} will be replaced with the counter value of the name if the counter value is greater than 1.
game:
  Ocarina of Time: 1
requires:
  version: 0.3.1 # Version of Archipelago required for this yaml to work as expected.
# Shared Options supported by all games:
Ocarina of Time:
  logic_rules: # Set the logic used for the generator.
    glitchless: 50
    glitched: 0
    no_logic: 0
  logic_no_night_tokens_without_suns_song: # Nighttime skulltulas will logically require Sun's Song.
    false: 50
    true: 0
  open_forest: # Set the state of Kokiri Forest and the path to Deku Tree.
    open: 50
    closed_deku: 0
    closed: 0
  open_kakariko: # Set the state of the Kakariko Village gate.
    open: 50
    zelda: 0
    closed: 0
  open_door_of_time: # Open the Door of Time by default, without the Song of Time.
    false: 0
    true: 50
  zora_fountain: # Set the state of King Zora, blocking the way to Zora's Fountain.
    open: 0
    adult: 0
    closed: 50
  gerudo_fortress: # Set the requirements for access to Gerudo Fortress.
    normal: 0
    fast: 50
    open: 0
  bridge: # Set the requirements for the Rainbow Bridge.
    open: 0
    vanilla: 0
    stones: 0
    medallions: 50
    dungeons: 0
    tokens: 0
  trials: # Set the number of required trials in Ganon's Castle.
    # you can add additional values between minimum and maximum
    0: 50 # minimum value
    6: 0 # maximum value
    random: 0
    random-low: 0
    random-high: 0
  starting_age: # Choose which age Link will start as.
    child: 50
    adult: 0
  shuffle_interior_entrances: # Shuffles interior entrances. "Simple" shuffles houses and Great Fairies; "All" includes Windmill, Link's House, Temple of Time, and Kak potion shop.
    off: 50
    simple: 0
    all: 0
  shuffle_grotto_entrances: # Shuffles grotto and grave entrances.
    false: 50
    true: 0
  shuffle_dungeon_entrances: # Shuffles dungeon entrances, excluding Ganon's Castle. Opens Deku, Fire and BotW to both ages.
    false: 50
    true: 0
  shuffle_overworld_entrances: # Shuffles overworld loading zones.
    false: 50
    true: 0
  owl_drops: # Randomizes owl drops from Lake Hylia or Death Mountain Trail as child.
    false: 50
    true: 0
  warp_songs: # Randomizes warp song destinations.
    false: 50
    true: 0
  spawn_positions: # Randomizes the starting position on loading a save. Consistent between savewarps.
    false: 50
    true: 0
  triforce_hunt: # Gather pieces of the Triforce scattered around the world to complete the game.
    false: 50
    true: 0
  triforce_goal: # Number of Triforce pieces required to complete the game.
    # you can add additional values between minimum and maximum
    1: 0 # minimum value
    100: 0 # maximum value
    random: 0
    random-low: 0
    random-high: 0
    20: 50
  extra_triforce_percentage: # Percentage of additional Triforce pieces in the pool, separate from the item pool setting.
    # you can add additional values between minimum and maximum
    0: 0 # minimum value
    100: 0 # maximum value
    random: 0
    random-low: 0
    random-high: 0
    50: 50
  bombchus_in_logic: # Bombchus are properly considered in logic. The first found pack will have 20 chus; Kokiri Shop and Bazaar sell refills; bombchus open Bombchu Bowling.
    false: 50
    true: 0
  mq_dungeons: # Number of MQ dungeons. The dungeons to replace are randomly selected.
    # you can add additional values between minimum and maximum
    0: 50 # minimum value
    12: 0 # maximum value
    random: 0
    random-low: 0
    random-high: 0
  bridge_stones: # Set the number of Spiritual Stones required for the rainbow bridge.
    # you can add additional values between minimum and maximum
    0: 0 # minimum value
    3: 50 # maximum value
    random: 0
    random-low: 0
    random-high: 0
  bridge_medallions: # Set the number of medallions required for the rainbow bridge.
    # you can add additional values between minimum and maximum
    0: 0 # minimum value
    6: 50 # maximum value
    random: 0
    random-low: 0
    random-high: 0
  bridge_rewards: # Set the number of dungeon rewards required for the rainbow bridge.
    # you can add additional values between minimum and maximum
    0: 0 # minimum value
    9: 50 # maximum value
    random: 0
    random-low: 0
    random-high: 0
  bridge_tokens: # Set the number of Gold Skulltula Tokens required for the rainbow bridge.
    # you can add additional values between minimum and maximum
    0: 0 # minimum value
    100: 0 # maximum value
    random: 0
    random-low: 0
    random-high: 0
    40: 50
  shuffle_mapcompass: # Control where to shuffle dungeon maps and compasses.
    remove: 0
    startwith: 50
    vanilla: 0
    dungeon: 0
    overworld: 0
    any_dungeon: 0
    keysanity: 0
  shuffle_smallkeys: # Control where to shuffle dungeon small keys.
    remove: 0
    vanilla: 0
    dungeon: 50
    overworld: 0
    any_dungeon: 0
    keysanity: 0
  shuffle_fortresskeys: # Control where to shuffle the Gerudo Fortress small keys.
    vanilla: 50
    overworld: 0
    any_dungeon: 0
    keysanity: 0
  shuffle_bosskeys: # Control where to shuffle boss keys, except the Ganon's Castle Boss Key.
    remove: 0
    vanilla: 0
    dungeon: 50
    overworld: 0
    any_dungeon: 0
    keysanity: 0
  shuffle_ganon_bosskey: # Control where to shuffle the Ganon's Castle Boss Key.
    remove: 50
    vanilla: 0
    dungeon: 0
    overworld: 0
    any_dungeon: 0
    keysanity: 0
    on_lacs: 0
  enhance_map_compass: # Map tells if a dungeon is vanilla or MQ. Compass tells what the dungeon reward is.
    false: 50
    true: 0
  lacs_condition: # Set the requirements for the Light Arrow Cutscene in the Temple of Time.
    vanilla: 50
    stones: 0
    medallions: 0
    dungeons: 0
    tokens: 0
  lacs_stones: # Set the number of Spiritual Stones required for LACS.
    # you can add additional values between minimum and maximum
    0: 0 # minimum value
    3: 50 # maximum value
    random: 0
    random-low: 0
    random-high: 0
  lacs_medallions: # Set the number of medallions required for LACS.
    # you can add additional values between minimum and maximum
    0: 0 # minimum value
    6: 50 # maximum value
    random: 0
    random-low: 0
    random-high: 0
  lacs_rewards: # Set the number of dungeon rewards required for LACS.
    # you can add additional values between minimum and maximum
    0: 0 # minimum value
    9: 50 # maximum value
    random: 0
    random-low: 0
    random-high: 0
  lacs_tokens: # Set the number of Gold Skulltula Tokens required for LACS.
    # you can add additional values between minimum and maximum
    0: 0 # minimum value
    100: 0 # maximum value
    random: 0
    random-low: 0
    random-high: 0
    40: 50
  shuffle_song_items: # Set where songs can appear.
    song: 50
    dungeon: 0
    any: 0
  shopsanity: # Randomizes shop contents. "fixed_number" randomizes a specific number of items per shop; 
    #    "random_number" randomizes the value for each shop. 
    off: 50
    fixed_number: 0
    random_number: 0
  shop_slots: # Number of items per shop to be randomized into the main itempool. 
    #    Only active if Shopsanity is set to "fixed_number." 
    # you can add additional values between minimum and maximum
    0: 50 # minimum value
    4: 0 # maximum value
    random: 0
    random-low: 0
    random-high: 0
  tokensanity: # Token rewards from Gold Skulltulas are shuffled into the pool.
    off: 50
    dungeons: 0
    overworld: 0
    all: 0
  shuffle_scrubs: # Shuffle the items sold by Business Scrubs, and set the prices.
    off: 50
    low: 0
    regular: 0
    random_prices: 0
  shuffle_cows: # Cows give items when Epona's Song is played.
    false: 50
    true: 0
  shuffle_kokiri_sword: # Shuffle Kokiri Sword into the item pool.
    false: 50
    true: 0
  shuffle_ocarinas: # Shuffle the Fairy Ocarina and Ocarina of Time into the item pool.
    false: 50
    true: 0
  shuffle_weird_egg: # Shuffle the Weird Egg from Malon at Hyrule Castle.
    false: 50
    true: 0
  shuffle_gerudo_card: # Shuffle the Gerudo Membership Card into the item pool.
    false: 50
    true: 0
  shuffle_beans: # Adds a pack of 10 beans to the item pool and changes the bean salesman to sell one item for 60 rupees.
    false: 50
    true: 0
  shuffle_medigoron_carpet_salesman: # Shuffle the items sold by Medigoron and the Haunted Wasteland Carpet Salesman.
    false: 50
    true: 0
  skip_child_zelda: # Game starts with Zelda's Letter, the item at Zelda's Lullaby, and the relevant events already completed.
    false: 50
    true: 0
  no_escape_sequence: # Skips the tower collapse sequence between the Ganondorf and Ganon fights.
    false: 0
    true: 50
  no_guard_stealth: # The crawlspace into Hyrule Castle skips straight to Zelda.
    false: 0
    true: 50
  no_epona_race: # Epona can always be summoned with Epona's Song.
    false: 0
    true: 50
  skip_some_minigame_phases: # Dampe Race and Horseback Archery give both rewards if the second condition is met on the first attempt.
    false: 0
    true: 50
  complete_mask_quest: # All masks are immediately available to borrow from the Happy Mask Shop.
    false: 50
    true: 0
  useful_cutscenes: # Reenables the Poe cutscene in Forest Temple, Darunia in Fire Temple, and Twinrova introduction. Mostly useful for glitched.
    false: 50
    true: 0
  fast_chests: # All chest animations are fast. If disabled, major items have a slow animation.
    false: 0
    true: 50
  free_scarecrow: # Pulling out the ocarina near a scarecrow spot spawns Pierre without needing the song.
    false: 50
    true: 0
  fast_bunny_hood: # Bunny Hood lets you move 1.5x faster like in Majora's Mask.
    false: 50
    true: 0
  chicken_count: # Controls the number of Cuccos for Anju to give an item as child.
    # you can add additional values between minimum and maximum
    0: 0 # minimum value
    7: 50 # maximum value
    random: 0
    random-low: 0
    random-high: 0
  correct_chest_sizes: # Changes chests containing progression into large chests, and nonprogression into small chests.
    false: 50
    true: 0
  hints: # Gossip Stones can give hints about item locations.
    none: 0
    mask: 0
    agony: 0
    always: 50
  misc_hints: # Controls whether the Temple of Time altar gives dungeon prize info and whether Ganondorf hints the Light Arrows.
    false: 0
    true: 50
  hint_dist: # Choose the hint distribution to use. Affects the frequency of strong hints, which items are always hinted, etc.
    balanced: 50
    ddr: 0
    league: 0
    mw2: 0
    scrubs: 0
    strong: 0
    tournament: 0
    useless: 0
    very_strong: 0
    async: 0
  text_shuffle: # Randomizes text in the game for comedic effect.
    none: 50
    except_hints: 0
    complete: 0
  damage_multiplier: # Controls the amount of damage Link takes.
    half: 0
    normal: 50
    double: 0
    quadruple: 0
    ohko: 0
  no_collectible_hearts: # Hearts will not drop from enemies or objects.
    false: 50
    true: 0
  starting_tod: # Change the starting time of day.
    default: 50
    sunrise: 0
    morning: 0
    noon: 0
    afternoon: 0
    sunset: 0
    evening: 0
    midnight: 0
    witching_hour: 0
  start_with_consumables: # Start the game with full Deku Sticks and Deku Nuts.
    false: 50
    true: 0
  start_with_rupees: # Start with a full wallet. Wallet upgrades will also fill your wallet.
    false: 50
    true: 0
  item_pool_value: # Changes the number of items available in the game.
    plentiful: 0
    balanced: 50
    scarce: 0
    minimal: 0
  junk_ice_traps: # Adds ice traps to the item pool.
    off: 0
    normal: 50
    on: 0
    mayhem: 0
    onslaught: 0
  ice_trap_appearance: # Changes the appearance of ice traps as freestanding items.
    major_only: 50
    junk_only: 0
    anything: 0
  logic_earliest_adult_trade: # Earliest item that can appear in the adult trade sequence.
    pocket_egg: 0
    pocket_cucco: 0
    cojiro: 0
    odd_mushroom: 0
    poachers_saw: 0
    broken_sword: 0
    prescription: 50
    eyeball_frog: 0
    eyedrops: 0
    claim_check: 0
  logic_latest_adult_trade: # Latest item that can appear in the adult trade sequence.
    pocket_egg: 0
    pocket_cucco: 0
    cojiro: 0
    odd_mushroom: 0
    poachers_saw: 0
    broken_sword: 0
    prescription: 0
    eyeball_frog: 0
    eyedrops: 0
    claim_check: 50
  default_targeting: # Default targeting option.
    hold: 50
    switch: 0
  display_dpad: # Show dpad icon on HUD for quick actions (ocarina, hover boots, iron boots).
    false: 0
    true: 50
  correct_model_colors: # Makes in-game models match their HUD element colors.
    false: 0
    true: 50
  background_music: # Randomize or disable background music.
    normal: 50
    off: 0
    randomized: 0
  fanfares: # Randomize or disable item fanfares.
    normal: 50
    off: 0
    randomized: 0
  ocarina_fanfares: # Enable ocarina songs as fanfares. These are longer than usual fanfares. Does nothing without fanfares randomized.
    false: 50
    true: 0
  kokiri_color: # Choose a color. "random_choice" selects a random option. "completely_random" generates a random hex code.
    random_choice: 0
    completely_random: 0
    kokiri_green: 50
    goron_red: 0
    zora_blue: 0
    black: 0
    white: 0
    azure_blue: 0
    vivid_cyan: 0
    light_red: 0
    fuchsia: 0
    purple: 0
    majora_purple: 0
    twitch_purple: 0
    purple_heart: 0
    persian_rose: 0
    dirty_yellow: 0
    blush_pink: 0
    hot_pink: 0
    rose_pink: 0
    orange: 0
    gray: 0
    gold: 0
    silver: 0
    beige: 0
    teal: 0
    blood_red: 0
    blood_orange: 0
    royal_blue: 0
    sonic_blue: 0
    nes_green: 0
    dark_green: 0
    lumen: 0
  goron_color: # Choose a color. "random_choice" selects a random option. "completely_random" generates a random hex code.
    random_choice: 0
    completely_random: 0
    kokiri_green: 0
    goron_red: 50
    zora_blue: 0
    black: 0
    white: 0
    azure_blue: 0
    vivid_cyan: 0
    light_red: 0
    fuchsia: 0
    purple: 0
    majora_purple: 0
    twitch_purple: 0
    purple_heart: 0
    persian_rose: 0
    dirty_yellow: 0
    blush_pink: 0
    hot_pink: 0
    rose_pink: 0
    orange: 0
    gray: 0
    gold: 0
    silver: 0
    beige: 0
    teal: 0
    blood_red: 0
    blood_orange: 0
    royal_blue: 0
    sonic_blue: 0
    nes_green: 0
    dark_green: 0
    lumen: 0
  zora_color: # Choose a color. "random_choice" selects a random option. "completely_random" generates a random hex code.
    random_choice: 0
    completely_random: 0
    kokiri_green: 0
    goron_red: 0
    zora_blue: 50
    black: 0
    white: 0
    azure_blue: 0
    vivid_cyan: 0
    light_red: 0
    fuchsia: 0
    purple: 0
    majora_purple: 0
    twitch_purple: 0
    purple_heart: 0
    persian_rose: 0
    dirty_yellow: 0
    blush_pink: 0
    hot_pink: 0
    rose_pink: 0
    orange: 0
    gray: 0
    gold: 0
    silver: 0
    beige: 0
    teal: 0
    blood_red: 0
    blood_orange: 0
    royal_blue: 0
    sonic_blue: 0
    nes_green: 0
    dark_green: 0
    lumen: 0
  silver_gauntlets_color: # Choose a color. "random_choice" selects a random option. "completely_random" generates a random hex code.
    random_choice: 0
    completely_random: 0
    silver: 50
    gold: 0
    black: 0
    green: 0
    blue: 0
    bronze: 0
    red: 0
    sky_blue: 0
    pink: 0
    magenta: 0
    orange: 0
    lime: 0
    purple: 0
  golden_gauntlets_color: # Choose a color. "random_choice" selects a random option. "completely_random" generates a random hex code.
    random_choice: 0
    completely_random: 0
    silver: 0
    gold: 50
    black: 0
    green: 0
    blue: 0
    bronze: 0
    red: 0
    sky_blue: 0
    pink: 0
    magenta: 0
    orange: 0
    lime: 0
    purple: 0
  mirror_shield_frame_color: # Choose a color. "random_choice" selects a random option. "completely_random" generates a random hex code.
    random_choice: 0
    completely_random: 0
    red: 50
    green: 0
    blue: 0
    yellow: 0
    cyan: 0
    magenta: 0
    orange: 0
    gold: 0
    purple: 0
    pink: 0
  navi_color_default_inner: # Choose a color. "random_choice" selects a random option. "completely_random" generates a random hex code.
    random_choice: 0
    completely_random: 0
    rainbow: 0
    gold: 0
    white: 50
    green: 0
    light_blue: 0
    yellow: 0
    red: 0
    magenta: 0
    black: 0
    tatl: 0
    tael: 0
    fi: 0
    ciela: 0
    epona: 0
    ezlo: 0
    king_of_red_lions: 0
    linebeck: 0
    loftwing: 0
    midna: 0
    phantom_zelda: 0
  navi_color_default_outer: # Choose a color. "random_choice" selects a random option. "completely_random" generates a random hex code. "match_inner" copies the inner color for this option.
    random_choice: 0
    completely_random: 0
    rainbow: 0
    gold: 0
    white: 0
    green: 0
    light_blue: 0
    yellow: 0
    red: 0
    magenta: 0
    black: 0
    tatl: 0
    tael: 0
    fi: 0
    ciela: 0
    epona: 0
    ezlo: 0
    king_of_red_lions: 0
    linebeck: 0
    loftwing: 0
    midna: 0
    phantom_zelda: 0
    match_inner: 50
  navi_color_enemy_inner: # Choose a color. "random_choice" selects a random option. "completely_random" generates a random hex code.
    random_choice: 0
    completely_random: 0
    rainbow: 0
    gold: 0
    white: 0
    green: 0
    light_blue: 0
    yellow: 50
    red: 0
    magenta: 0
    black: 0
    tatl: 0
    tael: 0
    fi: 0
    ciela: 0
    epona: 0
    ezlo: 0
    king_of_red_lions: 0
    linebeck: 0
    loftwing: 0
    midna: 0
    phantom_zelda: 0
  navi_color_enemy_outer: # Choose a color. "random_choice" selects a random option. "completely_random" generates a random hex code. "match_inner" copies the inner color for this option.
    random_choice: 0
    completely_random: 0
    rainbow: 0
    gold: 0
    white: 0
    green: 0
    light_blue: 0
    yellow: 0
    red: 0
    magenta: 0
    black: 0
    tatl: 0
    tael: 0
    fi: 0
    ciela: 0
    epona: 0
    ezlo: 0
    king_of_red_lions: 0
    linebeck: 0
    loftwing: 0
    midna: 0
    phantom_zelda: 0
    match_inner: 50
  navi_color_npc_inner: # Choose a color. "random_choice" selects a random option. "completely_random" generates a random hex code.
    random_choice: 0
    completely_random: 0
    rainbow: 0
    gold: 0
    white: 0
    green: 0
    light_blue: 50
    yellow: 0
    red: 0
    magenta: 0
    black: 0
    tatl: 0
    tael: 0
    fi: 0
    ciela: 0
    epona: 0
    ezlo: 0
    king_of_red_lions: 0
    linebeck: 0
    loftwing: 0
    midna: 0
    phantom_zelda: 0
  navi_color_npc_outer: # Choose a color. "random_choice" selects a random option. "completely_random" generates a random hex code. "match_inner" copies the inner color for this option.
    random_choice: 0
    completely_random: 0
    rainbow: 0
    gold: 0
    white: 0
    green: 0
    light_blue: 0
    yellow: 0
    red: 0
    magenta: 0
    black: 0
    tatl: 0
    tael: 0
    fi: 0
    ciela: 0
    epona: 0
    ezlo: 0
    king_of_red_lions: 0
    linebeck: 0
    loftwing: 0
    midna: 0
    phantom_zelda: 0
    match_inner: 50
  navi_color_prop_inner: # Choose a color. "random_choice" selects a random option. "completely_random" generates a random hex code.
    random_choice: 0
    completely_random: 0
    rainbow: 0
    gold: 0
    white: 0
    green: 50
    light_blue: 0
    yellow: 0
    red: 0
    magenta: 0
    black: 0
    tatl: 0
    tael: 0
    fi: 0
    ciela: 0
    epona: 0
    ezlo: 0
    king_of_red_lions: 0
    linebeck: 0
    loftwing: 0
    midna: 0
    phantom_zelda: 0
  navi_color_prop_outer: # Choose a color. "random_choice" selects a random option. "completely_random" generates a random hex code. "match_inner" copies the inner color for this option.
    random_choice: 0
    completely_random: 0
    rainbow: 0
    gold: 0
    white: 0
    green: 0
    light_blue: 0
    yellow: 0
    red: 0
    magenta: 0
    black: 0
    tatl: 0
    tael: 0
    fi: 0
    ciela: 0
    epona: 0
    ezlo: 0
    king_of_red_lions: 0
    linebeck: 0
    loftwing: 0
    midna: 0
    phantom_zelda: 0
    match_inner: 50
  sword_trail_duration: # Set the duration for sword trails.
    # you can add additional values between minimum and maximum
    4: 50 # minimum value
    20: 0 # maximum value
    random: 0
    random-low: 0
    random-high: 0
  sword_trail_color_inner: # Choose a color. "random_choice" selects a random option. "completely_random" generates a random hex code.
    random_choice: 0
    completely_random: 0
    rainbow: 0
    white: 50
    red: 0
    green: 0
    blue: 0
    cyan: 0
    magenta: 0
    orange: 0
    gold: 0
    purple: 0
    pink: 0
  sword_trail_color_outer: # Choose a color. "random_choice" selects a random option. "completely_random" generates a random hex code. "match_inner" copies the inner color for this option.
    random_choice: 0
    completely_random: 0
    rainbow: 0
    white: 0
    red: 0
    green: 0
    blue: 0
    cyan: 0
    magenta: 0
    orange: 0
    gold: 0
    purple: 0
    pink: 0
    match_inner: 50
  bombchu_trail_color_inner: # Choose a color. "random_choice" selects a random option. "completely_random" generates a random hex code.
    random_choice: 0
    completely_random: 0
    rainbow: 0
    red: 50
    green: 0
    blue: 0
    cyan: 0
    magenta: 0
    orange: 0
    gold: 0
    purple: 0
    pink: 0
  bombchu_trail_color_outer: # Choose a color. "random_choice" selects a random option. "completely_random" generates a random hex code. "match_inner" copies the inner color for this option.
    random_choice: 0
    completely_random: 0
    rainbow: 0
    red: 0
    green: 0
    blue: 0
    cyan: 0
    magenta: 0
    orange: 0
    gold: 0
    purple: 0
    pink: 0
    match_inner: 50
  boomerang_trail_color_inner: # Choose a color. "random_choice" selects a random option. "completely_random" generates a random hex code.
    random_choice: 0
    completely_random: 0
    rainbow: 0
    yellow: 50
    red: 0
    green: 0
    blue: 0
    cyan: 0
    magenta: 0
    orange: 0
    gold: 0
    purple: 0
    pink: 0
  boomerang_trail_color_outer: # Choose a color. "random_choice" selects a random option. "completely_random" generates a random hex code. "match_inner" copies the inner color for this option.
    random_choice: 0
    completely_random: 0
    rainbow: 0
    yellow: 0
    red: 0
    green: 0
    blue: 0
    cyan: 0
    magenta: 0
    orange: 0
    gold: 0
    purple: 0
    pink: 0
    match_inner: 50
  heart_color: # Choose a color. "random_choice" selects a random option. "completely_random" generates a random hex code.
    random_choice: 0
    completely_random: 0
    red: 50
    green: 0
    blue: 0
    yellow: 0
  magic_color: # Choose a color. "random_choice" selects a random option. "completely_random" generates a random hex code.
    random_choice: 0
    completely_random: 0
    green: 50
    red: 0
    blue: 0
    purple: 0
    pink: 0
    yellow: 0
    white: 0
  a_button_color: # Choose a color. "random_choice" selects a random option. "completely_random" generates a random hex code.
    random_choice: 0
    completely_random: 0
    n64_blue: 50
    n64_green: 0
    n64_red: 0
    gamecube_green: 0
    gamecube_red: 0
    gamecube_grey: 0
    yellow: 0
    black: 0
    white: 0
    magenta: 0
    ruby: 0
    sapphire: 0
    lime: 0
    cyan: 0
    purple: 0
    orange: 0
  b_button_color: # Choose a color. "random_choice" selects a random option. "completely_random" generates a random hex code.
    random_choice: 0
    completely_random: 0
    n64_blue: 0
    n64_green: 50
    n64_red: 0
    gamecube_green: 0
    gamecube_red: 0
    gamecube_grey: 0
    yellow: 0
    black: 0
    white: 0
    magenta: 0
    ruby: 0
    sapphire: 0
    lime: 0
    cyan: 0
    purple: 0
    orange: 0
  c_button_color: # Choose a color. "random_choice" selects a random option. "completely_random" generates a random hex code.
    random_choice: 0
    completely_random: 0
    n64_blue: 0
    n64_green: 0
    n64_red: 0
    gamecube_green: 0
    gamecube_red: 0
    gamecube_grey: 0
    yellow: 50
    black: 0
    white: 0
    magenta: 0
    ruby: 0
    sapphire: 0
    lime: 0
    cyan: 0
    purple: 0
    orange: 0
  start_button_color: # Choose a color. "random_choice" selects a random option. "completely_random" generates a random hex code.
    random_choice: 0
    completely_random: 0
    n64_blue: 0
    n64_green: 0
    n64_red: 50
    gamecube_green: 0
    gamecube_red: 0
    gamecube_grey: 0
    yellow: 0
    black: 0
    white: 0
    magenta: 0
    ruby: 0
    sapphire: 0
    lime: 0
    cyan: 0
    purple: 0
    orange: 0
  sfx_navi_overworld: # Choose a sound effect. "random_choice" selects a random option. "random_ear_safe" selects a random safe option. "completely_random" selects any random sound.
    default: 50
    completely_random: 0
    random_ear_safe: 0
    random_choice: 0
    none: 0
    bark: 0
    business_scrub: 0
    carrot_refill: 0
    cluck: 0
    cockadoodledoo: 0
    dusk_howl: 0
    exploding_crate: 0
    explosion: 0
    great_fairy: 0
    guay: 0
    low_health: 0
    recover_health: 0
    horse_neigh: 0
    shattering_ice: 0
    moo: 0
    mweep: 0
    navi_hello: 0
    notification: 0
    poe: 0
    shattering_pot: 0
    redead_scream: 0
    ribbit: 0
    ruto_giggle: 0
    skulltula: 0
    soft_beep: 0
    tambourine: 0
    timer: 0
    adult_zelda_gasp: 0
  sfx_navi_enemy: # Choose a sound effect. "random_choice" selects a random option. "random_ear_safe" selects a random safe option. "completely_random" selects any random sound.
    default: 50
    completely_random: 0
    random_ear_safe: 0
    random_choice: 0
    none: 0
    bark: 0
    business_scrub: 0
    carrot_refill: 0
    cluck: 0
    cockadoodledoo: 0
    dusk_howl: 0
    exploding_crate: 0
    explosion: 0
    great_fairy: 0
    guay: 0
    low_health: 0
    recover_health: 0
    horse_neigh: 0
    shattering_ice: 0
    moo: 0
    mweep: 0
    navi_hello: 0
    notification: 0
    poe: 0
    shattering_pot: 0
    redead_scream: 0
    ribbit: 0
    ruto_giggle: 0
    skulltula: 0
    soft_beep: 0
    tambourine: 0
    timer: 0
    adult_zelda_gasp: 0
  sfx_low_hp: # Choose a sound effect. "random_choice" selects a random option. "random_ear_safe" selects a random safe option. "completely_random" selects any random sound.
    default: 50
    completely_random: 0
    random_ear_safe: 0
    random_choice: 0
    none: 0
    bark: 0
    bomb_bounce: 0
    bongo_bongo_low: 0
    bow_twang: 0
    business_scrub: 0
    carrot_refill: 0
    cluck: 0
    drawbridge_set: 0
    guay: 0
    recover_health: 0
    horse_trot: 0
    iron_boots: 0
    moo: 0
    mweep: 0
    navi_hey: 0
    navi_random: 0
    notification: 0
    shattering_pot: 0
    ribbit: 0
    silver_rupee: 0
    soft_beep: 0
    switch: 0
    sword_bonk: 0
    tambourine: 0
    timer: 0
    adult_zelda_gasp: 0
  sfx_menu_cursor: # Choose a sound effect. "random_choice" selects a random option. "random_ear_safe" selects a random safe option. "completely_random" selects any random sound.
    default: 50
    completely_random: 0
    random_ear_safe: 0
    random_choice: 0
    none: 0
    bark: 0
    bomb_bounce: 0
    bongo_bongo_high: 0
    bongo_bongo_low: 0
    bottle_cork: 0
    bow_twang: 0
    bubble_laugh: 0
    carrot_refill: 0
    change_item: 0
    child_pant: 0
    cluck: 0
    deku_baba: 0
    drawbridge_set: 0
    dusk_howl: 0
    fanfare_light: 0
    fanfare_medium: 0
    field_shrub: 0
    flare_dancer_startled: 0
    ganondorf_teh: 0
    gohma_larva_croak: 0
    gold_skull_token: 0
    goron_wake: 0
    guay: 0
    gunshot: 0
    low_health: 0
    recover_health: 0
    hammer_bonk: 0
    horse_trot: 0
    iron_boots: 0
    iron_knuckle: 0
    moo: 0
    mweep: 0
    notification: 0
    phantom_ganon_laugh: 0
    plant_explode: 0
    shattering_pot: 0
    redead_moan: 0
    ribbit: 0
    rupee: 0
    silver_rupee: 0
    ruto_crash: 0
    ruto_lift: 0
    ruto_thrown: 0
    scrub_emerge: 0
    shabom_bounce: 0
    shabom_pop: 0
    shellblade: 0
    skulltula: 0
    soft_beep: 0
    spit_nut: 0
    switch: 0
    sword_bonk: 0
    talon_hmm: 0
    talon_snore: 0
    talon_wtf: 0
    tambourine: 0
    target_enemy: 0
    target_neutral: 0
    thunder: 0
    timer: 0
    adult_zelda_gasp: 0
  sfx_menu_select: # Choose a sound effect. "random_choice" selects a random option. "random_ear_safe" selects a random safe option. "completely_random" selects any random sound.
    default: 50
    completely_random: 0
    random_ear_safe: 0
    random_choice: 0
    none: 0
    bark: 0
    bomb_bounce: 0
    bongo_bongo_high: 0
    bongo_bongo_low: 0
    bottle_cork: 0
    bow_twang: 0
    bubble_laugh: 0
    carrot_refill: 0
    change_item: 0
    child_cringe: 0
    child_pant: 0
    child_scream: 0
    cluck: 0
    deku_baba: 0
    drawbridge_set: 0
    dusk_howl: 0
    fanfare_light: 0
    fanfare_medium: 0
    field_shrub: 0
    flare_dancer_startled: 0
    ganondorf_teh: 0
    gohma_larva_croak: 0
    gold_skull_token: 0
    goron_wake: 0
    guay: 0
    gunshot: 0
    low_health: 0
    recover_health: 0
    hammer_bonk: 0
    horse_trot: 0
    iron_boots: 0
    iron_knuckle: 0
    moo: 0
    mweep: 0
    notification: 0
    phantom_ganon_laugh: 0
    plant_explode: 0
    shattering_pot: 0
    redead_moan: 0
    ribbit: 0
    rupee: 0
    silver_rupee: 0
    ruto_crash: 0
    ruto_lift: 0
    ruto_thrown: 0
    scrub_emerge: 0
    shabom_bounce: 0
    shabom_pop: 0
    shellblade: 0
    skulltula: 0
    soft_beep: 0
    spit_nut: 0
    switch: 0
    sword_bonk: 0
    talon_hmm: 0
    talon_snore: 0
    talon_wtf: 0
    tambourine: 0
    target_enemy: 0
    target_neutral: 0
    thunder: 0
    timer: 0
    adult_zelda_gasp: 0
  sfx_nightfall: # Choose a sound effect. "random_choice" selects a random option. "random_ear_safe" selects a random safe option. "completely_random" selects any random sound.
    default: 50
    completely_random: 0
    random_ear_safe: 0
    random_choice: 0
    none: 0
    cockadoodledoo: 0
    gold_skull_token: 0
    great_fairy: 0
    moo: 0
    mweep: 0
    redead_moan: 0
    talon_snore: 0
    thunder: 0
  sfx_horse_neigh: # Choose a sound effect. "random_choice" selects a random option. "random_ear_safe" selects a random safe option. "completely_random" selects any random sound.
    default: 50
    completely_random: 0
    random_ear_safe: 0
    random_choice: 0
    none: 0
    armos: 0
    child_scream: 0
    great_fairy: 0
    moo: 0
    mweep: 0
    redead_scream: 0
    ruto_wiggle: 0
    stalchild_attack: 0
  sfx_hover_boots: # Choose a sound effect. "random_choice" selects a random option. "random_ear_safe" selects a random safe option. "completely_random" selects any random sound.
    default: 50
    completely_random: 0
    random_ear_safe: 0
    random_choice: 0
    none: 0
    bark: 0
    cartoon_fall: 0
    flare_dancer_laugh: 0
    mweep: 0
    shabom_pop: 0
    tambourine: 0
  sfx_ocarina: # Change the sound of the ocarina.
    ocarina: 50
    malon: 0
    whistle: 0
    harp: 0
    grind_organ: 0
    flute: 0
  logic_tricks: # Set various tricks for logic in Ocarina of Time. 
    #Format as a comma-separated list of "nice" names: ["Fewer Tunic Requirements", "Hidden Grottos without Stone of Agony"].
    #A full list of supported tricks can be found at https://github.com/ArchipelagoMW/Archipelago/blob/main/worlds/oot/LogicTricks.py
    []

  death_link: # When you die, everyone dies. Of course the reverse is true too.
    false: 50
    true: 0
  progression_balancing: # A system that moves progression earlier, to try and prevent the player from getting stuck and bored early.
    false: 0
    true: 50
  accessibility: # Set rules for reachability of your items/locations.
    #    Locations: ensure everything can be reached and acquired.
    #    Items: ensure all logically relevant items can be acquired.
    #    Minimal: ensure what is needed to reach your goal can be acquired.
    locations: 0
    items: 50
    minimal: 0
  local_items: # Forces these items to be in their native world.
    []

  non_local_items: # Forces these items to be outside their native world.
    []

  start_inventory: # Start with these items.
    {}

  start_hints: # Start with these item's locations prefilled into the !hint command.
    []

  start_location_hints: # Start with these locations and their item prefilled into the !hint command
    []

  exclude_locations: # Prevent these locations from having an important item
    []

  priority_locations: # Prevent these locations from having an unimportant item
    []

  item_links: # Share part of your item pool with other players.
    []

  